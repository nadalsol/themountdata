// Icon
// -----------------------------------------------------------------------------
// Use: Required.
//
// Purpose: Base class, to specify the icon basic properties.
//
// 1. This allows inheritance from parent elements (i.e. an Icon placed within
// a Button would inherit the color defined in the Button, for each state).
//

.icon {
  display: inline-block;
  vertical-align: text-bottom;
  fill: currentColor; // 1
}


// Icon sizes
// -----------------------------------------------------------------------------
// Use: Optional.
//
// Purpose: Size class, to specify different icon sizes.
//
// Possible values: `icon--small`, `icon--medium`...
//

.icon--arrow {
  @include size(19px, 60px);
}

.icon--brand {
  @include size($header-brand-wd, $header-brand-ht);

  @media ($medium-up) {
    @include size($header-brand-wd-medium-up, $header-brand-ht-medium-up);
  }
}

.icon--business {
  @include size(264px, 194px);
}

.icon--business-medium-up {
  @include size(100%, auto);
}

.icon--values {
  @include size(286px, 311px);
}

.icon--values-medium-up {
  @include size(444px, 416px);
}

.icon--small {
  @include size(30px, 30px);
  vertical-align: middle;
}


// Icon colors
// -----------------------------------------------------------------------------
// Use: Optional (only if you expect color changes on your <svg> files).
//
// Purpose: Fill/Stroke classes, to specify <svg> shape colors.
//
// Possible values: `fill-light`, `stroke-light`...
//

.fill-citron {
  fill: $c-citron;
}

.fill-java {
  fill: $c-java;
}

.fill-light {
  fill: $c-light;

  .header.is-sticky & {
    fill: $c-balticsea;
  }
}

.stroke-light {
  stroke: $c-light;

  .header.is-sticky & {
    stroke: $c-balticsea;
  }
}
